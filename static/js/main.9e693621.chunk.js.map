{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","creature","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","logo","onClick","href","rel","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAGaA,EAAO,SAAAC,GAAK,OACjB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHjBC,G,MAAW,SAAAR,GACpB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJjDM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCRH,MAA0B,iCCkF1BG,G,wDA3Eb,aAAe,IAAD,8BACZ,gBAkCFH,aAAe,SAAAI,GAAC,OAAI,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAjCvD,EAAKC,MAAQ,CACXC,SAAU,MACVd,SAAU,GAkBVU,YAAa,IAtBH,E,qDA4Bd,WAAqB,IAAD,OAClBK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACT,SAAUmB,S,oBAW1C,WAAU,IAAD,OAEP,EAAgCC,KAAKP,MAA9Bb,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,YAEXW,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAAIA,EAAQE,KAAK0B,cAAcC,SAASd,EAAYa,kBAEpG,OACE,sBAAK/B,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKE,IAAK+B,EAAMjC,UAAU,WAAWC,IAAI,SACzC,uCACS2B,KAAKP,MAAMC,YAEpB,wBAAQY,QAAS,iBAA8B,QAAxB,EAAKb,MAAMC,SAAqB,EAAKL,SAAS,CAACK,SAAU,UAAY,EAAKL,SAAS,CAACK,SAAU,SAArH,yBACA,mBACEtB,UAAU,WACVmC,KAAK,sBACLhB,OAAO,SACPiB,IAAI,sBAJN,4BASF,kDACA,cAAC,EAAD,CACEzB,YAAY,kBACZC,aAAcgB,KAAKhB,eACrB,cAAC,EAAD,CAAUJ,SAAUqB,W,GAtEVQ,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9e693621.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n);\r\n","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => {    \r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map(monster => <Card key={monster.id} monster={monster}/>)}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        className=\"search\" \r\n        type=\"search\" \r\n        placeholder={placeholder} \r\n        onChange={handleChange}/>   \r\n)","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      creature: \"man\",\n      monsters: [\n        // {\n        //   name: \"Balaur\",\n        //   id: \"ba1\"\n        // },\n        // {\n        //   name: \"Strigoi\",\n        //   id: \"st1\"\n        // },\n        // {\n        //   name: \"Pricolici\",\n        //   id: \"pr1\"\n        // },\n        // {\n        //   name: \"Moroi\",\n        //   id: \"mo1\"\n        // }\n      ],\n      searchField: ''\n    }\n\n    //this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  //if used with arrow function, no need to set 'bind(this)' inside constructor, because 'this' will be bound to the context where the function was defined\n  handleChange = e => this.setState({searchField: e.target.value});\n\n  //used with normal function where 'this.handleChange = this.handleChange.bind(this)' is needed inside the constructor\n  /*handleChange (e) {\n    this.setState({searchField: e.target.value})\n  }*/\n\n  render() {\n    /*object destructuring*/\n    const {monsters, searchField} = this.state;\n\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Hello {this.state.creature}\n          </p>\n          <button onClick={() => this.state.creature === \"man\" ? this.setState({creature: \"alien\"}) : this.setState({creature: \"man\"})}>Change name</button>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n          placeholder=\"search monsters\" \n          handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*Promise example*/\n// const myPromise = new Promise((resolve, reject) => {\n//   if(true) {\n//     setTimeout(() => {\n//       resolve('I have succeded');\n//     }, 1000);\n//   } else {\n//     reject('I have failed');\n//   }\n// });\n\n// myPromise.then(resolvedPromiseResponse => resolvedPromiseResponse + \"!!!\")\n//          .then(resolvedPromiseResponseFromAbove => console.log(resolvedPromiseResponseFromAbove))\n//          .catch(errorResponse => console.log(errorResponse));\n\n\n/*fetch examples*/\n// fetch('https://jsonplaceholder.typicode.com/posts/1')\n//      .then(response => response.json())\n//      .then(jsonResponseFromAbove => console.log(jsonResponseFromAbove));\n\n/*example with faulty URL which will trigger \"catch\"*/ \n// fetch('https://jsonplaceher.typicodecom/posts/1')\n//      .then(response => response.json())\n//      .then(jsonResultFromAbove => console.log(jsonResultFromAbove))\n//      .catch(errorResponse => console.log('I have errored'));\n\n// fetch('https://jsonplaceholder.typicode.com/users')\n//   .then(response => response.json())\n//   .then(users => {\n//     const firstUser = users[0];\n//     console.log(firstUser);\n//     return fetch(\n//       'https://jsonplaceholder.typicode.com/posts?userId=' + firstUser.id\n//     );\n//   })\n//   .then(response => response.json())\n//   .then(posts => console.log(posts))\n//   .catch(error => console.log(error));\n\n/*async - await example*/\n// const myAsyncFunction = async () => {\n//   try {\n//     const usersReponse = await fetch('https://jsonplaceholder.typicode.com/users');\n//     const users = await usersReponse.json();\n//     const secondUser = users[1];\n\n//     console.log(secondUser);\n\n//     const postsResponse = await fetch('https://jsonplaceholder.typicode.com/posts?userId=' + secondUser.id);\n//     const posts = await postsResponse.json();\n\n//     console.log(posts);\n//   } catch(err) {\n//     console.log('there was an error');\n//   }\n// }\n\n// myAsyncFunction();\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}